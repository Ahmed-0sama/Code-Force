<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="test" targetName="test" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a551c965-5eb6-4204-8a10-2911348b93f0" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/../A. Registration system/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/../A. Registration system/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../B. Hopscotch/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../B. Hopscotch/.idea/B. Hopscotch.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../B. Hopscotch/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../B. Hopscotch/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../B. Hopscotch/cmake-build-debug/CMakeFiles/clion-Debug-log.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../C - Vacation/cmake-build-debug/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/../C - Vacation/cmake-build-debug/.ninja_deps" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../C - Vacation/cmake-build-debug/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/../C - Vacation/cmake-build-debug/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../C - Vacation/cmake-build-debug/CMakeFiles/C___Vacation.dir/main.cpp.obj" beforeDir="false" afterPath="$PROJECT_DIR$/../C - Vacation/cmake-build-debug/CMakeFiles/C___Vacation.dir/main.cpp.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../C - Vacation/cmake-build-debug/C___Vacation.exe" beforeDir="false" afterPath="$PROJECT_DIR$/../C - Vacation/cmake-build-debug/C___Vacation.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../C - Vacation/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/../C - Vacation/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../F - LCM Problem/cmake-build-debug/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/../F - LCM Problem/cmake-build-debug/.ninja_deps" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../F - LCM Problem/cmake-build-debug/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/../F - LCM Problem/cmake-build-debug/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../F - LCM Problem/cmake-build-debug/CMakeFiles/F___LCM_Problem.dir/main.cpp.obj" beforeDir="false" afterPath="$PROJECT_DIR$/../F - LCM Problem/cmake-build-debug/CMakeFiles/F___LCM_Problem.dir/main.cpp.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../F - LCM Problem/cmake-build-debug/F___LCM_Problem.exe" beforeDir="false" afterPath="$PROJECT_DIR$/../F - LCM Problem/cmake-build-debug/F___LCM_Problem.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../F - LCM Problem/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/../F - LCM Problem/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../F - LCM Problem/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/../F - LCM Problem/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../H - Chocolate/cmake-build-debug/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/../H - Chocolate/cmake-build-debug/.ninja_deps" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../H - Chocolate/cmake-build-debug/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/../H - Chocolate/cmake-build-debug/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../H - Chocolate/cmake-build-debug/CMakeFiles/H___Chocolate.dir/main.cpp.obj" beforeDir="false" afterPath="$PROJECT_DIR$/../H - Chocolate/cmake-build-debug/CMakeFiles/H___Chocolate.dir/main.cpp.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../H - Chocolate/cmake-build-debug/H___Chocolate.exe" beforeDir="false" afterPath="$PROJECT_DIR$/../H - Chocolate/cmake-build-debug/H___Chocolate.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../H - Chocolate/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/../H - Chocolate/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../H - Chocolate/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/../H - Chocolate/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../dp/cmake-build-debug/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/../dp/cmake-build-debug/.ninja_deps" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../dp/cmake-build-debug/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/../dp/cmake-build-debug/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../dp/cmake-build-debug/CMakeFiles/dp.dir/main.cpp.obj" beforeDir="false" afterPath="$PROJECT_DIR$/../dp/cmake-build-debug/CMakeFiles/dp.dir/main.cpp.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../dp/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/../dp/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../dp/cmake-build-debug/dp.exe" beforeDir="false" afterPath="$PROJECT_DIR$/../dp/cmake-build-debug/dp.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../dp/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/../dp/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/main.cpp" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2023" />
    <option name="minorVersion" value="2.3" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2iMhXNYmCtUKcUoS57hVp0wkW1k" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "D:/Section/ps/Code-Force/test",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="test" TARGET_NAME="test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="test" RUN_TARGET_NAME="test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a551c965-5eb6-4204-8a10-2911348b93f0" name="Changes" comment="" />
      <created>1719306392005</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1719306392005</updated>
      <workItem from="1719306393546" duration="6670000" />
      <workItem from="1719335091339" duration="26000" />
      <workItem from="1734551525262" duration="1347000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticEditVcpkgJson value="false" />
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticFoundErrors value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
</project>